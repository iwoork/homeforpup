{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid": "DynamoDBDataAccess",
            "Effect": "Allow",
            "Action": [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:Query",
                "dynamodb:Scan",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem"
            ],
            "Resource": [
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-users",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-profiles",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-dogs",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeders",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeds",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeds-simple",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-messages",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-message-threads",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-favorites",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-activities",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-kennels",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-litters",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-users/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-profiles/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-dogs/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeders/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeds/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-breeds-simple/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-message-threads/index/*",
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-favorites/index/*"
            ]
        },
        {
            "Sid": "DynamoDBTableInfo",
            "Effect": "Allow",
            "Action": [
                "dynamodb:DescribeTable",
                "dynamodb:ListTables"
            ],
            "Resource": "*"
        },
        {
            "Sid": "DynamoDBTableCreation",
            "Effect": "Allow",
            "Action": [
                "dynamodb:CreateTable",
                "dynamodb:DeleteTable",
                "dynamodb:UpdateTable",
                "dynamodb:UpdateTimeToLive",
                "dynamodb:DescribeTimeToLive",
                "dynamodb:TagResource",
                "dynamodb:UntagResource",
                "dynamodb:ListTagsOfResource"
            ],
            "Resource": [
                "arn:aws:dynamodb:us-east-1:*:table/homeforpup-*"
            ]
        },
        {
            "Sid": "S3DataAccess",
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:ListBucket"
            ],
            "Resource": [
                "arn:aws:s3:::homeforpup-images",
                "arn:aws:s3:::homeforpup-images/*"
            ]
        },
        {
            "Sid": "SESEmailSending",
            "Effect": "Allow",
            "Action": [
                "ses:SendEmail",
                "ses:SendRawEmail",
                "ses:GetSendQuota",
                "ses:GetSendStatistics"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CognitoReadOnly",
            "Effect": "Allow",
            "Action": [
                "cognito-idp:DescribeUserPool",
                "cognito-idp:DescribeUserPoolClient",
                "cognito-idp:ListUsers",
                "cognito-idp:AdminGetUser",
                "cognito-idp:AdminListGroupsForUser",
                "cognito-idp:ListUserPoolClients",
                "cognito-idp:DescribeUserPoolDomain"
            ],
            "Resource": [
                "arn:aws:cognito-idp:us-east-1:*:userpool/*"
            ]
        },
        {
            "Sid": "CloudWatchLogs",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:FilterLogEvents"
            ],
            "Resource": "arn:aws:logs:us-east-1:*:log-group:/aws/lambda/*"
        },
        {
            "Sid": "CDKCloudFormation",
            "Effect": "Allow",
            "Action": [
                "cloudformation:CreateStack",
                "cloudformation:UpdateStack",
                "cloudformation:DeleteStack",
                "cloudformation:DescribeStacks",
                "cloudformation:DescribeStackEvents",
                "cloudformation:DescribeStackResources",
                "cloudformation:GetTemplate",
                "cloudformation:ValidateTemplate",
                "cloudformation:CreateChangeSet",
                "cloudformation:DescribeChangeSet",
                "cloudformation:ExecuteChangeSet",
                "cloudformation:DeleteChangeSet",
                "cloudformation:ListStacks",
                "cloudformation:GetTemplateSummary"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKLambda",
            "Effect": "Allow",
            "Action": [
                "lambda:CreateFunction",
                "lambda:UpdateFunctionCode",
                "lambda:UpdateFunctionConfiguration",
                "lambda:DeleteFunction",
                "lambda:GetFunction",
                "lambda:GetFunctionConfiguration",
                "lambda:ListFunctions",
                "lambda:AddPermission",
                "lambda:RemovePermission",
                "lambda:InvokeFunction",
                "lambda:TagResource",
                "lambda:UntagResource",
                "lambda:PublishVersion",
                "lambda:CreateAlias",
                "lambda:UpdateAlias",
                "lambda:DeleteAlias",
                "lambda:GetPolicy",
                "lambda:PutFunctionConcurrency"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKAPIGateway",
            "Effect": "Allow",
            "Action": [
                "apigateway:*"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKIAM",
            "Effect": "Allow",
            "Action": [
                "iam:CreateRole",
                "iam:DeleteRole",
                "iam:GetRole",
                "iam:PassRole",
                "iam:AttachRolePolicy",
                "iam:DetachRolePolicy",
                "iam:PutRolePolicy",
                "iam:DeleteRolePolicy",
                "iam:GetRolePolicy",
                "iam:CreatePolicy",
                "iam:DeletePolicy",
                "iam:GetPolicy",
                "iam:GetPolicyVersion",
                "iam:ListPolicyVersions",
                "iam:TagRole",
                "iam:UntagRole",
                "iam:UpdateAssumeRolePolicy"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKCloudWatchLogs",
            "Effect": "Allow",
            "Action": [
                "logs:CreateLogGroup",
                "logs:DeleteLogGroup",
                "logs:DescribeLogGroups",
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
                "logs:TagLogGroup",
                "logs:UntagLogGroup"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKS3Deployment",
            "Effect": "Allow",
            "Action": [
                "s3:CreateBucket",
                "s3:DeleteBucket",
                "s3:GetBucketLocation",
                "s3:GetBucketPolicy",
                "s3:PutBucketPolicy",
                "s3:DeleteBucketPolicy",
                "s3:GetBucketVersioning",
                "s3:PutBucketVersioning",
                "s3:GetBucketPublicAccessBlock",
                "s3:PutBucketPublicAccessBlock",
                "s3:GetEncryptionConfiguration",
                "s3:PutEncryptionConfiguration",
                "s3:PutLifecycleConfiguration",
                "s3:GetLifecycleConfiguration",
                "s3:PutBucketTagging",
                "s3:GetBucketTagging",
                "s3:PutObject",
                "s3:GetObject",
                "s3:DeleteObject",
                "s3:ListBucket",
                "s3:ListBucketVersions",
                "s3:GetObjectVersion"
            ],
            "Resource": [
                "arn:aws:s3:::cdktoolkit-*",
                "arn:aws:s3:::cdktoolkit-*/*",
                "arn:aws:s3:::cdk-*",
                "arn:aws:s3:::cdk-*/*"
            ]
        },
        {
            "Sid": "CDKSSM",
            "Effect": "Allow",
            "Action": [
                "ssm:GetParameter",
                "ssm:PutParameter",
                "ssm:DeleteParameter",
                "ssm:AddTagsToResource"
            ],
            "Resource": "arn:aws:ssm:*:*:parameter/cdk-bootstrap/*"
        },
        {
            "Sid": "CDKECR",
            "Effect": "Allow",
            "Action": [
                "ecr:GetAuthorizationToken",
                "ecr:BatchCheckLayerAvailability",
                "ecr:GetDownloadUrlForLayer",
                "ecr:BatchGetImage",
                "ecr:CreateRepository",
                "ecr:DescribeRepositories",
                "ecr:DeleteRepository",
                "ecr:PutImage",
                "ecr:InitiateLayerUpload",
                "ecr:UploadLayerPart",
                "ecr:CompleteLayerUpload",
                "ecr:SetRepositoryPolicy",
                "ecr:GetRepositoryPolicy",
                "ecr:DeleteRepositoryPolicy",
                "ecr:GetLifecyclePolicy",
                "ecr:PutLifecyclePolicy",
                "ecr:DeleteLifecyclePolicy",
                "ecr:TagResource",
                "ecr:UntagResource"
            ],
            "Resource": "*"
        },
        {
            "Sid": "CDKMisc",
            "Effect": "Allow",
            "Action": [
                "sts:GetCallerIdentity",
                "sts:AssumeRole"
            ],
            "Resource": "*"
        }
    ]
}

